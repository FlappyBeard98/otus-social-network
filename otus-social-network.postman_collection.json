{
	"info": {
		"_postman_id": "650e201c-64aa-4c0f-87d0-1bb678c6a617",
		"name": "otus-social-network",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2484151"
	},
	"item": [
		{
			"name": "register first user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require('uuid');",
							"pm.environment.set('login','test_login_'+ uuid.v4());",
							"pm.environment.set('password','test_password_'+ uuid.v4());",
							"var body = {",
							"    firstName: 'test_firstName_'+ uuid.v4(),",
							"    lastName: 'test_lastName_'+ uuid.v4(),",
							"    age: 20,",
							"    gender: 1,",
							"    city: 'Moscow',",
							"    hobbies: 'none',",
							"    login:  pm.environment.get('login'),",
							"    password: pm.environment.get('password')",
							"};",
							"pm.environment.set('register_request_body', JSON.stringify(body)); ",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful register first user\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});",
							"pm.environment.set('userId',pm.response.json().userId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{register_request_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}:1323/register",
					"host": [
						"{{host}}"
					],
					"port": "1323",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "get first user profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful get first user profile\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});",
							"pm.environment.set('profile',pm.response.json());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{login}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}:1323/profile/{{userId}}",
					"host": [
						"{{host}}"
					],
					"port": "1323",
					"path": [
						"profile",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "save first user profile",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = pm.environment.get('profile');",
							"body.lastName = 'changed last name'",
							"pm.environment.set('register_request_body', JSON.stringify(body)); "
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful save first user profile\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{login}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{register_request_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}:1323/profile/{{userId}}",
					"host": [
						"{{host}}"
					],
					"port": "1323",
					"path": [
						"profile",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "register second user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require('uuid');",
							"var login = 'test_login_'+ uuid.v4();",
							"var password = 'test_password_'+ uuid.v4();",
							"pm.environment.set('second_user_lastName','test_second_lastName_'+ uuid.v4());",
							"var body = {",
							"    firstName: 'test_second_firstName_'+ uuid.v4(),",
							"    lastName: pm.environment.get('second_user_lastName'),",
							"    age: 20,",
							"    gender: 1,",
							"    city: 'Moscow',",
							"    hobbies: 'none',",
							"    login:  login,",
							"    password: password",
							"};",
							"pm.environment.set('register_request_body', JSON.stringify(body)); ",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful register second user\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});",
							"pm.environment.set('userId',pm.response.json().userId);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{register_request_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}:1323/register",
					"host": [
						"{{host}}"
					],
					"port": "1323",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "find second user by last name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful find second user by last name\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});",
							"pm.environment.set('friend_user_id',pm.response.json().items[0].userId);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{login}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}:1323/profiles?lastName={{second_user_lastName}}&offset=0&limit=100",
					"host": [
						"{{host}}"
					],
					"port": "1323",
					"path": [
						"profiles"
					],
					"query": [
						{
							"key": "lastName",
							"value": "{{second_user_lastName}}"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "add second user as friend of first user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = pm.environment.get('profile');",
							"body.lastName = 'changed last name'",
							"pm.environment.set('register_request_body', JSON.stringify(body)); "
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful add second user as friend of first user\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{login}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{host}}:1323/profile/{{userId}}/friends/{{friend_user_id}}",
					"host": [
						"{{host}}"
					],
					"port": "1323",
					"path": [
						"profile",
						"{{userId}}",
						"friends",
						"{{friend_user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get first user friends",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful get first user friends\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"    pm.expect(pm.response.json().pageInfo.total).greaterThan(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{login}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}:1323/profile/{{userId}}/friends?offset=0&limit=100",
					"host": [
						"{{host}}"
					],
					"port": "1323",
					"path": [
						"profile",
						"{{userId}}",
						"friends"
					],
					"query": [
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "100"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "remove second user from friends of first user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var body = pm.environment.get('profile');",
							"body.lastName = 'changed last name'",
							"pm.environment.set('register_request_body', JSON.stringify(body)); "
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful remove second user from friends of first user\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{login}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}:1323/profile/{{userId}}/friends/{{friend_user_id}}",
					"host": [
						"{{host}}"
					],
					"port": "1323",
					"path": [
						"profile",
						"{{userId}}",
						"friends",
						"{{friend_user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get first user empty friends list",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful get first user empty friends list\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"    pm.expect(pm.response.json().pageInfo.total).eq(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{login}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}:1323/profile/{{userId}}/friends?offset=0&limit=100",
					"host": [
						"{{host}}"
					],
					"port": "1323",
					"path": [
						"profile",
						"{{userId}}",
						"friends"
					],
					"query": [
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "limit",
							"value": "100"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost",
			"type": "string"
		}
	]
}